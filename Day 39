  
Problem Statement: Minimum days to make M bouquets or Minimum Number of Days to Make m Bouquets
Problem: https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/
Solution of the Problem:

 -Solution:

  
    class Solution {
        public int minDays(int[] bloomDay, int m, int k) {
            long val = (long) m * k; 
            int n = bloomDay.length; 
            
            if (val > n) return -1; 
            
            
            int mini = Integer.MAX_VALUE, maxi = Integer.MIN_VALUE;
            for (int day : bloomDay) {
                mini = Math.min(mini, day);
                maxi = Math.max(maxi, day);
            }
    
            
            int low = mini;
            int high = maxi;
            
            while (low <= high) {
                int mid = (low + high) / 2;
                if (possible(bloomDay, mid, m, k)) {
    
                    high = mid - 1;
    
                } else {
    
                    low = mid + 1; 
    
                }
            }
            return low; 
        }
    
        private boolean possible(int[] arr, int day, int m, int k) {
            int cnt = 0;
            int noOfB = 0;
    
            
            for (int i = 0; i < arr.length; i++) {
                if (arr[i] <= day) {
                    
                    cnt++; 
    
                } else {
    
                    noOfB += (cnt / k); 
                    cnt = 0;
                }
            }
    
            noOfB += (cnt / k); 
    
            return noOfB >= m; 
        }
    }
    
