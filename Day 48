  
Problem Statement: Maximum Average Subarray I
Problem: https://leetcode.com/problems/maximum-average-subarray-i/
Solution of the Problem:

 -Solution:

    class Solution {
        public double findMaxAverage(int[] nums, int k) {
            // Calculate the initial sum for the first 'k' elements
            double maxSum = 0;
            for (int i = 0; i < k; i++) {
                maxSum += nums[i];
            }
            
            // This will hold the current sum of the sliding window
            double currentSum = maxSum;
            
            // Slide the window from left to right
            for (int i = k; i < nums.length; i++) {
                // Update the current sum by adding the new element and subtracting the old one
                currentSum += nums[i] - nums[i - k];
                // Keep track of the maximum sum encountered
                maxSum = Math.max(maxSum, currentSum);
            }
            
            // Return the maximum average value
            return maxSum / k;
        }
    }
